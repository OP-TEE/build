CONFIG_TEE=y
CONFIG_OPTEE=y
# CONFIG_OPTEE_TA_AVB is not set
# CONFIG_OPTEE_TA_SCP03 is not set
# CONFIG_DISTRO_DEFAULTS is not set
# CONFIG_ENV_IS_IN_MMC is not set
CONFIG_ENV_IS_NOWHERE=y
# CONFIG_EFI_LOADER is not set
# CONFIG_CMD_OPTEE_RPMB is not set
# CONFIG_FIT_SIGNATURE is not set
# CONFIG_CHIMP_OPTEE is not set
# CONFIG_USB is not set
# CONFIG_CMD_NET is not set
# CONFIG_CMD_TPM is not set
# CONFIG_TPM is not set
# CONFIG_TPM_V1 is not set
# CONFIG_TPM_V2 is not set
# CONFIG_NET is not set
# CONFIG_PCI is not set
# CONFIG_CMD_ELF is not set
# CONFIG_CMD_GO is not set
CONFIG_HUSH_PARSER=y
CONFIG_CMD_FS_GENERIC=y
CONFIG_CMD_EXT2=y
CONFIG_USE_BOOTARGS=y
CONFIG_BOOTARGS="console=ttyS2,1500000 root=PARTUUID=17d61bff-8fdc-4089-b675-9be21b9f6ac7 loglevel=6 rootwait"
CONFIG_DEFAULT_FDT_FILE="/boot/rk3399-rock-pi-4b.dtb"
CONFIG_USE_BOOTCOMMAND=y
## Note: kernel_addr_gz is arbitrarily chosen to be 100M (0xa0000000) above kernel_addr_r
## That leaves quite a lot of room to decompress the kernel which by default is ~50MB
CONFIG_BOOTCOMMAND="setenv bootdev unknown; setenv kernel_addr_gz 0xa2080000; setenv kernel /boot/Image.gz; for d in 1 0; do test ${bootdev} = unknown && echo .. Looking for ${kernel} in mmc ${d}:5 && test -e mmc ${d}:5 ${kernel} && setenv bootdev ${d} && echo .. Found; done; if test ${bootdev} = unknown; then echo .. Kernel not found; else echo .. Loading kernel; ext2load mmc ${bootdev}:5 ${kernel_addr_gz} ${kernel}; unzip ${kernel_addr_gz} ${kernel_addr_r}; echo .. Loading DTB: mmc ${bootdev}:5 ${fdtfile}; ext2load mmc ${bootdev}:5 ${fdt_addr_r} ${fdtfile}; echo .. Booting kernel; booti ${kernel_addr_r} - ${fdt_addr_r}; fi"
CONFIG_BOOTDELAY=0
